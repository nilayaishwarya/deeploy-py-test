{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting started \u00b6","title":"Getting started"},{"location":"#getting-started","text":"","title":"Getting started"},{"location":"api-reference/","text":"Table of Contents \u00b6 deeploy.deeploy Client __init__ deploy deeploy.models.deploy_options DeployOptions name model_serverless explainer_serverless method description example_input example_output model_class_name pytorch_model_file_path deeploy.enums.prediction_method PredictionMethod PREDICT PREDICT_PROBA deeploy.deeploy \u00b6 Client Objects \u00b6 class Client ( object ) A class for interacting with Deeploy __init__ | __init__ ( access_key : str , secret_key : str , host : str , workspace_id : str , local_repository_path : str , branch_name : str = None ) -> None Initialise the Deeploy client Arguments : access_key str - Personal Access Key generated from the Deeploy UI secret_key str - Secret Access Key generated from the Deeploy UI host str - The host at which Deeploy is located, i.e. deeploy.example.com workspace_id str - The ID of the workspace in which your repository is located local_repository_path str - Absolute path to the local git repository which is connected to Deeploy branch_name str, optional - The banchname on which to commit new models. Defaults to the current branchname. deploy | deploy ( model : Any , options : DeployOptions , explainer : Any = None , overwrite : bool = False , commit_message : str = None ) -> Deployment Deploy a model on Deeploy Arguments : model Any - The class instance of an ML model options DeployOptions - An instance of the deploy options class containing the deployment options explainer Any, optional - The class instance of an optional model explainer overwrite bool, optional - Whether or not to overwrite files that are in the 'model' and 'explainer' folders in the git folder. Defaults to False commit_message str, optional - Commit message to use deeploy.models.deploy_options \u00b6 DeployOptions Objects \u00b6 class DeployOptions ( BaseModel ) Class that contains the options for deploying a model Attributes : name str - name of the deployment model_serverless bool, optional - whether to deploy the model in a serverless fashion. Defaults to False explainer_serverless bool, optional - whether to deploy the model in a serverless fashion. Defaults to False method PredictionMethod, optional - which prediction function to use. Only applicable to sklearn and xgboost models. Defaults to 'predict' description str, optional - the description of the deployment example_input List, optional - list of example input parameters for the model example_output List, optional - list of example output for the model model_class_name str, optional - the name of the class containing the PyTorch model. name model_serverless explainer_serverless method description example_input example_output model_class_name pytorch_model_file_path deeploy.enums.prediction_method \u00b6 PredictionMethod Objects \u00b6 class PredictionMethod ( Enum ) PREDICT PREDICT_PROBA","title":"API Reference"},{"location":"api-reference/#table-of-contents","text":"deeploy.deeploy Client __init__ deploy deeploy.models.deploy_options DeployOptions name model_serverless explainer_serverless method description example_input example_output model_class_name pytorch_model_file_path deeploy.enums.prediction_method PredictionMethod PREDICT PREDICT_PROBA","title":"Table of Contents"},{"location":"api-reference/#deeploydeeploy","text":"","title":"deeploy.deeploy"},{"location":"api-reference/#client-objects","text":"class Client ( object ) A class for interacting with Deeploy","title":"Client Objects"},{"location":"api-reference/#deeploymodelsdeploy_options","text":"","title":"deeploy.models.deploy_options"},{"location":"api-reference/#deployoptions-objects","text":"class DeployOptions ( BaseModel ) Class that contains the options for deploying a model Attributes : name str - name of the deployment model_serverless bool, optional - whether to deploy the model in a serverless fashion. Defaults to False explainer_serverless bool, optional - whether to deploy the model in a serverless fashion. Defaults to False method PredictionMethod, optional - which prediction function to use. Only applicable to sklearn and xgboost models. Defaults to 'predict' description str, optional - the description of the deployment example_input List, optional - list of example input parameters for the model example_output List, optional - list of example output for the model model_class_name str, optional - the name of the class containing the PyTorch model.","title":"DeployOptions Objects"},{"location":"api-reference/#deeployenumsprediction_method","text":"","title":"deeploy.enums.prediction_method"},{"location":"api-reference/#predictionmethod-objects","text":"class PredictionMethod ( Enum )","title":"PredictionMethod Objects"},{"location":"getting-started/","text":"Getting started \u00b6","title":"Getting started"},{"location":"getting-started/#getting-started","text":"","title":"Getting started"},{"location":"test/","text":"Test \u00b6","title":"Test"},{"location":"test/#test","text":"","title":"Test"}]}